<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.janker.jmall.orm.mapper.OmsRefundOrderItemMapper">
  <resultMap id="BaseResultMap" type="top.janker.jmall.orm.model.OmsRefundOrderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="refund_order_id" jdbcType="INTEGER" property="refundOrderId" />
    <result column="product_sku_id" jdbcType="INTEGER" property="productSkuId" />
    <result column="refund_amount" jdbcType="DECIMAL" property="refundAmount" />
    <result column="pay_amount" jdbcType="DECIMAL" property="payAmount" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="product_quantity" jdbcType="INTEGER" property="productQuantity" />
    <result column="product_price" jdbcType="DECIMAL" property="productPrice" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, refund_order_id, product_sku_id, refund_amount, pay_amount, reason, product_quantity, 
    product_price, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oms_refund_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oms_refund_order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oms_refund_order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItemExample">
    delete from oms_refund_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_refund_order_item (refund_order_id, product_sku_id, refund_amount, 
      pay_amount, reason, product_quantity, 
      product_price, create_time, update_time
      )
    values (#{refundOrderId,jdbcType=INTEGER}, #{productSkuId,jdbcType=INTEGER}, #{refundAmount,jdbcType=DECIMAL}, 
      #{payAmount,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, #{productQuantity,jdbcType=INTEGER}, 
      #{productPrice,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItem">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into oms_refund_order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refundOrderId != null">
        refund_order_id,
      </if>
      <if test="productSkuId != null">
        product_sku_id,
      </if>
      <if test="refundAmount != null">
        refund_amount,
      </if>
      <if test="payAmount != null">
        pay_amount,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="productQuantity != null">
        product_quantity,
      </if>
      <if test="productPrice != null">
        product_price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refundOrderId != null">
        #{refundOrderId,jdbcType=INTEGER},
      </if>
      <if test="productSkuId != null">
        #{productSkuId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null">
        #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null">
        #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItemExample" resultType="java.lang.Long">
    select count(*) from oms_refund_order_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oms_refund_order_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.refundOrderId != null">
        refund_order_id = #{record.refundOrderId,jdbcType=INTEGER},
      </if>
      <if test="record.productSkuId != null">
        product_sku_id = #{record.productSkuId,jdbcType=INTEGER},
      </if>
      <if test="record.refundAmount != null">
        refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.payAmount != null">
        pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.productQuantity != null">
        product_quantity = #{record.productQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.productPrice != null">
        product_price = #{record.productPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oms_refund_order_item
    set id = #{record.id,jdbcType=INTEGER},
      refund_order_id = #{record.refundOrderId,jdbcType=INTEGER},
      product_sku_id = #{record.productSkuId,jdbcType=INTEGER},
      refund_amount = #{record.refundAmount,jdbcType=DECIMAL},
      pay_amount = #{record.payAmount,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      product_quantity = #{record.productQuantity,jdbcType=INTEGER},
      product_price = #{record.productPrice,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItem">
    update oms_refund_order_item
    <set>
      <if test="refundOrderId != null">
        refund_order_id = #{refundOrderId,jdbcType=INTEGER},
      </if>
      <if test="productSkuId != null">
        product_sku_id = #{productSkuId,jdbcType=INTEGER},
      </if>
      <if test="refundAmount != null">
        refund_amount = #{refundAmount,jdbcType=DECIMAL},
      </if>
      <if test="payAmount != null">
        pay_amount = #{payAmount,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        product_quantity = #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="productPrice != null">
        product_price = #{productPrice,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.janker.jmall.orm.model.OmsRefundOrderItem">
    update oms_refund_order_item
    set refund_order_id = #{refundOrderId,jdbcType=INTEGER},
      product_sku_id = #{productSkuId,jdbcType=INTEGER},
      refund_amount = #{refundAmount,jdbcType=DECIMAL},
      pay_amount = #{payAmount,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      product_quantity = #{productQuantity,jdbcType=INTEGER},
      product_price = #{productPrice,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>